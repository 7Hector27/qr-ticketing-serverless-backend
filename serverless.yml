service: qr-ticketing
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev

  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:3000
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowedHeaders:
        - Content-Type
        - Authorization
      allowCredentials: true

  environment:
    USERS_TABLE: Users
    EVENTS_TABLE: Events
    TICKETS_TABLE: Tickets
    JWT_SECRET: ${ssm:/aws/reference/secretsmanager/qr-ticketing-jwt}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/Users
            - arn:aws:dynamodb:${self:provider.region}:*:table/Users/index/*
            - arn:aws:dynamodb:${self:provider.region}:*:table/Events
            - arn:aws:dynamodb:${self:provider.region}:*:table/Events/index/*
            - arn:aws:dynamodb:${self:provider.region}:*:table/Tickets
            - arn:aws:dynamodb:${self:provider.region}:*:table/Tickets/index/*
functions:
  getUsers:
    handler: handlers/users/getUsers.main
    events:
      - httpApi:
          path: /users
          method: GET

  createUser:
    handler: handlers/users/createUser.main
    events:
      - httpApi:
          path: /users
          method: POST

  loginUser:
    handler: handlers/users/loginUser.main
    events:
      - httpApi:
          path: /login
          method: POST
  createEvent:
    handler: handlers/events/createEvent.main
    events:
      - httpApi:
          path: /events
          method: POST
